
        #include <stdio.h>
        struct student

        {

            char *name;

        };

        struct student s;

        struct student fun(void)

        {

            s.name = "newton";

            printf("%s\n", s.name);

            s.name = "alan";

            return s;

        }

        void main()

        {

            struct student m = fun();

            printf("%s\n", m.name);

            m.name = "turing";

            printf("%s\n", s.name);

        }
        
        
        
        #include <stdio.h>
        struct student
        {
            char *name;
        };

        void main()
        {

            struct student s, m;
            s.name = "st";
            m = s;
            printf("%s%s", s.name, m.name);

        }
        
        #include <stdio.h>
        struct temp
        {
            int a;

        } s;
        void func(struct temp s)
        {
            s.a = 10;
            printf("%d\t", s.a);
        }
        main()
        {

            func(s);
            printf("%d\t", s.a);

        }
        
6. Which of the following operation is illegal in structures?
a) Typecasting of structure
b) Pointer to a variable of the same structure
c) Dynamic allocation of memory for structure
d) All of the mentioned


7. Presence of code like “s.t.b = 10” indicates __________
a) Syntax Error
b) Structure
c) double data type
d) An ordinary variable name


        #include <stdio.h>
        struct student
        {
            char *name;
        };
        struct student fun(void)

        {
            struct student s;
            s.name = "alan";
            return s;
        }

        void main()

        {
            struct student m = fun();			
            s.name = "turing";
            printf("%s", m.name);

        }
        
#include <stdio.h>
struct point{int x;int y;};
int main(){
    struct point p={1},p1={1};
    if(p.x==p1.x && p.y==p1.y)
        printf("equal\n");
    else
        printf("not equal\n");
}


        #include <stdio.h>

        struct point

        {

            int x;

            int y;

        };

        struct notpoint

        {

            int x;

            int y;

        };

        int main()

        {

            struct point p = {1};

            struct notpoint p1 = p;

            printf("%d\n", p1.x);

        }
        
#include <stdio.h>

struct point {
    int x;
    int y;
};

void foo(struct point*);

int main() {
    struct point p1 = {1, 2};
    foo(&p1);
}

void foo(struct point *p) {
    printf("%d\n", p->x++);  // prints 1, increments x to 2
}


#include <stdio.h>

struct temp {
    int a;
    int b;
    int c;
};

int main() {
    struct temp p[] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
}



4. What is the correct syntax to declare a function foo() which receives an array of structure in function?
a) void foo(struct *var);
b) void foo(struct *var[]);
c) void foo(struct var);
d) none of the above


#include <stdio.h>

struct temp {
    int a;
    int b;
    int c;
} p[] = {0};

int main() {
    printf("%d", sizeof(p));
}

#include <stdio.h>

struct student {
    char *name;
};

struct student s[2];

void main() {
    s[0].name = "alan";
    s[1] = s[0];  // Copy struct s[0] to s[1]
    printf("%s%s", s[0].name, s[1].name);  // prints "alanalan"
    s[1].name = "turing";  // changes s[1].name pointer to "turing"
    printf("%s%s", s[0].name, s[1].name);  // prints "alanturing"
}

#include <stdio.h>

struct student {
    char *name;
};

struct student s[2], r[2];

void main() {
    s[0].name = "alan";
    s[1] = s[0];
    r = s;            // <-- Problem here
    printf("%s%s", r[0].name, r[1].name);
}

#include <stdio.h>

struct student {
    char *name;
};

void main() {
    struct student s[2], r[2];
    s[1] = s[0] = "alan";      // This line is problematic
    printf("%s%s", s[0].name, s[1].name);
}

#include <stdio.h>

struct student {
    char *name;
};

int main() {
    struct student s[2];
    s[0].name = "alan";
    s[1].name = "alan";
    printf("%s%s", s[0].name, s[1].name);
    return 0;
}

#include <stdio.h>
struct student{
        
};
void main()
 {
    struct student s[2];
    printf("%d", sizeof(s));
 }
 
#include <stdio.h>
struct point {
    int x;
    int y;
};

void foo(struct point*);

int main() {
    struct point p1[] = {1, 2, 3, 4};
    foo(p1);
}

void foo(struct point p[]) {
    printf("%d\n", p[1].x);
    		   p->x =1 (p+1)->x=3
    
}

#include <stdio.h>

struct point {
    int x;
    int y;
};

void foo(struct point *);

int main() {
    struct point p1[] = {1, 2, 3, 4};  // p1[0] = {1,2}, p1[1] = {3,4}
    foo(p1);
    return 0;
}

void foo(struct point p[]) {
    printf("%d %d\n", p->x, ++p->x);  2 2
    				(++p)->x //3
}


